[{"F:\\server\\my-app\\src\\App.js":"1","F:\\server\\my-app\\src\\screens\\HomeScreen.js":"2","F:\\server\\my-app\\src\\reportWebVitals.js":"3","F:\\server\\my-app\\src\\screens\\CartScreen.js":"4","F:\\server\\my-app\\src\\index.js":"5","F:\\server\\my-app\\src\\screens\\LoginScreen.js":"6","F:\\server\\my-app\\src\\screens\\RegisterScreen.js":"7"},{"size":783,"mtime":1608517701440,"results":"8","hashOfConfig":"9"},{"size":5913,"mtime":1608517607051,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1608085646143,"results":"11","hashOfConfig":"9"},{"size":596,"mtime":1608171777624,"results":"12","hashOfConfig":"9"},{"size":500,"mtime":1608085646143,"results":"13","hashOfConfig":"9"},{"size":3211,"mtime":1608278904579,"results":"14","hashOfConfig":"9"},{"size":4928,"mtime":1608520207676,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"118jfvj",{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},"F:\\server\\my-app\\src\\App.js",[],"F:\\server\\my-app\\src\\screens\\HomeScreen.js",["35","36"],"F:\\server\\my-app\\src\\reportWebVitals.js",[],["37","38"],"F:\\server\\my-app\\src\\screens\\CartScreen.js",["39"],"import React, { Component } from 'react';\r\nimport { useRouteMatch, useParams, useHistory } from \"react-router-dom\";\r\n\r\nclass CartScreen extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <span> CartScreen </span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default function BaseCartScreen() {\r\n    let match = useRouteMatch();\r\n    let param = useParams();\r\n    const history = useHistory();\r\n\r\n    return <CartScreen match={match.url} history={history} />\r\n}\r\n",["40","41"],"F:\\server\\my-app\\src\\index.js",[],["42","43"],"F:\\server\\my-app\\src\\screens\\LoginScreen.js",["44","45","46","47"],"F:\\server\\my-app\\src\\screens\\RegisterScreen.js",["48","49","50","51","52","53","54"],"import Axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport { useRouteMatch, useParams, useHistory } from \"react-router-dom\";\r\n\r\nclass RegisterScreen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            name: '',\r\n            phone: '',\r\n            address: '',\r\n        };\r\n    }\r\n\r\n    handleChangeUsername = (e) => {\r\n        this.setState({ username: e.target.value });\r\n    }\r\n\r\n    handleChangePassword = (e) => {\r\n        this.setState({ password: e.target.value });\r\n    }\r\n\r\n    handleChangeName = (e) => {\r\n        this.setState({ name: e.target.value });\r\n    }\r\n\r\n    handleChangePhone = (e) => {\r\n        this.setState({ phone: e.target.value });\r\n    }\r\n\r\n    handleChangeAddress = (e) => {\r\n        this.setState({ address: e.target.value });\r\n    }\r\n\r\n    validate = () => {\r\n        const { username, password, name, phone, address } = this.state;\r\n\r\n        if (username == '') {\r\n            alert('username không đc bỏ trống');\r\n            return false;\r\n        }\r\n\r\n        if (password == '') {\r\n            alert('password không đc bỏ trống');\r\n            return false;\r\n        }\r\n\r\n        if (name == '') {\r\n            alert('name không đc bỏ trống');\r\n            return false;\r\n        }\r\n\r\n        if (phone == '') {\r\n            alert('phone không đc bỏ trống');\r\n            return false;\r\n        }\r\n\r\n        if (address == '') {\r\n            alert('address không đc bỏ trống');\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    onRegister = async () => {\r\n        const { username, password, name, phone, address } = this.state;\r\n        if (this.validate()) {\r\n            try {\r\n                const params = {\r\n                    username: username,\r\n                    password: password,\r\n                    name: name,\r\n                    phone: phone,\r\n                    address: address\r\n                }\r\n                const res = await Axios.post('http://localhost:3000/api/register', params);\r\n                console.log(\"Dangki:\", res);\r\n                if (res.data.status != 200) {\r\n                    setTimeout(() => { alert(res.data.message) }, 250);\r\n                    return;\r\n                }\r\n                alert(res.data.message);\r\n                this.props.history.push('/');\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { username, password, name, phone, address } = this.state;\r\n        return (\r\n            <div style={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n            }}>\r\n                <h1>Đăng ký tài khoản</h1>\r\n                <input\r\n                    style={{ width: 200, marginTop: 10 }}\r\n                    placeholder=\"Username\"\r\n                    id=\"username\"\r\n                    onChange={this.handleChangeUsername}\r\n                    value={username}\r\n                />\r\n\r\n                <input\r\n                    style={{ width: 200, marginTop: 10 }}\r\n                    placeholder=\"Password\"\r\n                    id=\"password\"\r\n                    onChange={this.handleChangePassword}\r\n                    value={password}\r\n                />\r\n\r\n                <input\r\n                    style={{ width: 200, marginTop: 10 }}\r\n                    placeholder=\"Name\"\r\n                    id=\"name\"\r\n                    onChange={this.handleChangeName}\r\n                    value={name}\r\n                />\r\n\r\n                <input\r\n                    style={{ width: 200, marginTop: 10 }}\r\n                    placeholder=\"Phone\"\r\n                    id=\"phone\"\r\n                    onChange={this.handleChangePhone}\r\n                    value={phone}\r\n                />\r\n\r\n                <input\r\n                    style={{ width: 200, marginTop: 10 }}\r\n                    placeholder=\"Address\"\r\n                    id=\"address\"\r\n                    onChange={this.handleChangeAddress}\r\n                    value={address}\r\n                />\r\n\r\n                <div\r\n                    style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        width: 100,\r\n                        padding: 10, marginTop: 20,\r\n                        backgroundColor: '#42ABE1'\r\n                    }}\r\n                    onClick={this.onRegister}>\r\n                    <span> Đăng ký </span>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default function BaseRegisterScreen() {\r\n    let match = useRouteMatch();\r\n    let param = useParams();\r\n    const history = useHistory();\r\n    return <RegisterScreen match={match.url} history={history} />\r\n} ",{"ruleId":"55","severity":1,"message":"56","line":55,"column":18,"nodeType":"57","messageId":"58","endLine":55,"endColumn":20},{"ruleId":"59","severity":1,"message":"60","line":182,"column":9,"nodeType":"61","messageId":"62","endLine":182,"endColumn":14},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"59","severity":1,"message":"60","line":23,"column":9,"nodeType":"61","messageId":"62","endLine":23,"endColumn":14},{"ruleId":"63","replacedBy":"67"},{"ruleId":"65","replacedBy":"68"},{"ruleId":"63","replacedBy":"69"},{"ruleId":"65","replacedBy":"70"},{"ruleId":"59","severity":1,"message":"71","line":3,"column":10,"nodeType":"61","messageId":"62","endLine":3,"endColumn":14},{"ruleId":"55","severity":1,"message":"56","line":25,"column":22,"nodeType":"57","messageId":"58","endLine":25,"endColumn":24},{"ruleId":"55","severity":1,"message":"56","line":30,"column":22,"nodeType":"57","messageId":"58","endLine":30,"endColumn":24},{"ruleId":"55","severity":1,"message":"56","line":47,"column":37,"nodeType":"57","messageId":"58","endLine":47,"endColumn":39},{"ruleId":"55","severity":1,"message":"56","line":40,"column":22,"nodeType":"57","messageId":"58","endLine":40,"endColumn":24},{"ruleId":"55","severity":1,"message":"56","line":45,"column":22,"nodeType":"57","messageId":"58","endLine":45,"endColumn":24},{"ruleId":"55","severity":1,"message":"56","line":50,"column":18,"nodeType":"57","messageId":"58","endLine":50,"endColumn":20},{"ruleId":"55","severity":1,"message":"56","line":55,"column":19,"nodeType":"57","messageId":"58","endLine":55,"endColumn":21},{"ruleId":"55","severity":1,"message":"56","line":60,"column":21,"nodeType":"57","messageId":"58","endLine":60,"endColumn":23},{"ruleId":"55","severity":1,"message":"72","line":81,"column":37,"nodeType":"57","messageId":"58","endLine":81,"endColumn":39},{"ruleId":"59","severity":1,"message":"60","line":162,"column":9,"nodeType":"61","messageId":"62","endLine":162,"endColumn":14},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'param' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["73"],"no-negated-in-lhs",["74"],["73"],["74"],["73"],["74"],"'Link' is defined but never used.","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]