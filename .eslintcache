[{"F:\\server\\my-app\\src\\App.js":"1","F:\\server\\my-app\\src\\screens\\HomeScreen.js":"2","F:\\server\\my-app\\src\\reportWebVitals.js":"3","F:\\server\\my-app\\src\\screens\\CartScreen.js":"4","F:\\server\\my-app\\src\\index.js":"5","F:\\server\\my-app\\src\\screens\\LoginScreen.js":"6","F:\\server\\my-app\\src\\screens\\RegisterScreen.js":"7","F:\\server\\my-app\\src\\constant\\index.js":"8","F:\\server\\my-app\\src\\screens\\OrderScreen.js":"9","F:\\server\\my-app\\src\\screens\\AccountScreen.js":"10","F:\\server\\my-app\\src\\screens\\TestScreen.js":"11"},{"size":1211,"mtime":1609310431451,"results":"12","hashOfConfig":"13"},{"size":11156,"mtime":1609384753242,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1608085646143,"results":"15","hashOfConfig":"13"},{"size":7894,"mtime":1609384694944,"results":"16","hashOfConfig":"13"},{"size":524,"mtime":1609297157559,"results":"17","hashOfConfig":"13"},{"size":3180,"mtime":1609384758539,"results":"18","hashOfConfig":"13"},{"size":4973,"mtime":1609384780066,"results":"19","hashOfConfig":"13"},{"size":88,"mtime":1608523656585,"results":"20","hashOfConfig":"13"},{"size":3394,"mtime":1609384776476,"results":"21","hashOfConfig":"13"},{"size":4919,"mtime":1609384656074,"results":"22","hashOfConfig":"13"},{"size":1549,"mtime":1609315256802,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"118jfvj",{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\server\\my-app\\src\\App.js",[],["54","55"],"F:\\server\\my-app\\src\\screens\\HomeScreen.js",["56","57","58"],"F:\\server\\my-app\\src\\reportWebVitals.js",[],["59","60"],"F:\\server\\my-app\\src\\screens\\CartScreen.js",["61"],"import Axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport Constant from '../constant';\r\nimport '../../src/assets/styles/carts.css';\r\n\r\nclass CartScreen extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            user: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAuth();\r\n        this.showCart();\r\n    }\r\n\r\n    getAuth = async () => {\r\n        try {\r\n            let user = await localStorage.getItem('user');\r\n            this.setState({ user: JSON.parse(user) })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    showCart = async () => {\r\n        const user = await localStorage.getItem('user');\r\n        const userPar = JSON.parse(user);\r\n        try {\r\n            const res = await Axios.post(`${Constant.BASE_URL}/cart/show`, {}, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${userPar && userPar.access_token}`\r\n                }\r\n            })\r\n            console.log('SHOW :', res);\r\n            if (res.data.status != 200) {\r\n                alert(res.data.message);\r\n                return;\r\n            }\r\n            this.setState({\r\n                data: res.data.data,\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    onIncrease = async (e) => {\r\n        console.log(e);\r\n        try {\r\n            const user = await localStorage.getItem('user');\r\n            const userPar = JSON.parse(user);\r\n            const res = await Axios.post(`${Constant.BASE_URL}/cart/item/increase`, e, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${userPar && userPar.access_token}`\r\n                }\r\n            });\r\n            console.log('res:', res);\r\n            if (res.data.status != 200) {\r\n                alert(res.data.message);\r\n                return;\r\n            }\r\n            this.showCart();\r\n        } catch (error) {\r\n            console.log('error:', error);\r\n        }\r\n    }\r\n\r\n    onDecrease = async (e) => {\r\n        try {\r\n            const user = await localStorage.getItem('user');\r\n            const userPar = JSON.parse(user);\r\n            const res = await Axios.post(`${Constant.BASE_URL}/cart/item/decrease`, e, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${userPar && userPar.access_token}`\r\n                }\r\n            });\r\n            console.log('res:', res);\r\n            if (res.data.status != 200) {\r\n                alert(res.data.message);\r\n                return;\r\n            }\r\n            this.showCart();\r\n        } catch (error) {\r\n            console.log('error:', error);\r\n        }\r\n    }\r\n\r\n    onRemove = async (e) => {\r\n        try {\r\n            const user = await localStorage.getItem('user');\r\n            const userPar = JSON.parse(user);\r\n            const res = await Axios.post(`${Constant.BASE_URL}/cart/item/remove`, e, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${userPar && userPar.access_token}`\r\n                }\r\n            });\r\n            console.log('res:', res);\r\n            if (res.data.status != 200) {\r\n                alert(res.data.message);\r\n                return;\r\n            }\r\n            this.showCart();\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    renderListProduct = () => {\r\n        const { data } = this.state;\r\n        if (data.length == 0) {\r\n            return <div>\r\n                <p style={{ color: 'grey' }}>Giỏ hàng trống </p>\r\n            </div>\r\n        }\r\n        return data.map((e, i) => {\r\n            return (\r\n                <div key={e.id_product} className=\"item-cart\">\r\n                    <img src={e.image} alt={e.name} style={{ width: 100, height: 100 }} />\r\n                    <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                        <p>{e.name}</p>\r\n                        <p style={{ color: '#BF081F' }}>Giá: {e.price} VNĐ</p>\r\n                        <p>Số lượng: {e.quantity}</p>\r\n                        <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n                            <div style={{\r\n                                display: 'flex', justifyContent: 'center', alignContent: 'center',\r\n                                padding: 10, margin: 10, width: 24, height: 24, backgroundColor: 'green'\r\n                            }}\r\n                                onClick={() => this.onIncrease(e)}\r\n                            >\r\n                                <p style={{ color: 'white', fontSize: 16 }}>+</p>\r\n                            </div>\r\n                            <div style={{\r\n                                display: 'flex', justifyContent: 'center', alignContent: 'center',\r\n                                padding: 10, margin: 10, width: 24, height: 24, backgroundColor: 'green'\r\n                            }}\r\n                                onClick={() => this.onDecrease(e)}\r\n                            >\r\n                                <p style={{ color: 'white', fontSize: 16 }}>-</p>\r\n                            </div>\r\n\r\n                            <div style={{\r\n                                display: 'flex', justifyContent: 'center', alignContent: 'center',\r\n                                padding: 10, margin: 10, width: 24, height: 24, backgroundColor: 'red'\r\n                            }}\r\n                                onClick={() => this.onRemove(e)}\r\n                            >\r\n                                <p style={{ color: 'white', fontSize: 16 }}>X</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    onBuy = async () => {\r\n        if (this.state.data) {\r\n            alert('Giỏ hàng trống vui lòng chọn ít nhất 1 sản phầm để tiếp tục');\r\n            return;\r\n        }\r\n        try {\r\n            const params = {\r\n                data: this.state.data,\r\n                datetime: new Date\r\n            }\r\n            const user = await localStorage.getItem('user');\r\n            const userPar = JSON.parse(user);\r\n            console.log(params, userPar);\r\n            const res = await Axios.post(`${Constant.BASE_URL}/order/create`, params, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${userPar && userPar.access_token}`\r\n                }\r\n            });\r\n            if (res.data.status != 200) {\r\n                alert(res.data.message);\r\n                return;\r\n            }\r\n            console.log(\"onBuy:\", res);\r\n            this.props.history.push(\"/\");\r\n            setTimeout(() => { alert(res.data.message) }, 200)\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.user)\r\n        return (\r\n            <div>\r\n                <h1> Giỏ hàng </h1>\r\n                <p>Tài khoản: {this.state.user && this.state.user.username}</p>\r\n                <div\r\n                    onClick={this.onBuy}\r\n                    style={{\r\n                        marginTop: 10,\r\n                        marginBottom: 10,\r\n                        display: 'flex',\r\n                        justifyContent: 'center', alignContent: 'center',\r\n                        backgroundColor: 'orange', width: 100, padding: 10\r\n                    }}>\r\n                    <p>Mua hàng</p>\r\n                </div>\r\n                { this.renderListProduct()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default function BaseCartScreen() {\r\n    let match = useRouteMatch();\r\n    const history = useHistory();\r\n\r\n    return <CartScreen match={match.url} history={history} />\r\n}\r\n","F:\\server\\my-app\\src\\index.js",[],["62","63"],"F:\\server\\my-app\\src\\screens\\LoginScreen.js",["64","65","66"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport Constant from '../constant';\r\n\r\nclass LoginScreen extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: ''\r\n        };\r\n    }\r\n\r\n    handleChangeUsername = (e) => {\r\n        this.setState({ username: e.target.value });\r\n    }\r\n\r\n    handleChangePassword = (e) => {\r\n        this.setState({ password: e.target.value });\r\n    }\r\n\r\n    onValidate = () => {\r\n        const { username, password } = this.state;\r\n        if (username == '') {\r\n            alert('Chưa nhập username');\r\n            return false;\r\n        }\r\n\r\n        if (password == '') {\r\n            alert('chưa nhập password');\r\n            return;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    onLogin = async () => {\r\n        if (this.onValidate()) {\r\n            try {\r\n                const params = {\r\n                    username: this.state.username,\r\n                    password: this.state.password\r\n                }\r\n                const res = await axios.post(`${Constant.BASE_URL}/api/login`, params);\r\n                console.log(\"onLoigin:\", res)\r\n                if (res.data.status == 200) {\r\n                    // this.props.history.goBack()\r\n                    await localStorage.setItem(\"user\", JSON.stringify(res.data));\r\n                    this.props.history.push('/');\r\n                    return;\r\n                }\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { username, password } = this.state;\r\n        return (\r\n            <div style={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n            }}>\r\n                <h1>Đăng nhập tài khoản</h1>\r\n                <input\r\n                    style={{ width: 200, marginTop: 10 }}\r\n                    placeholder=\"Username\"\r\n                    id=\"username\"\r\n                    onChange={this.handleChangeUsername}\r\n                    value={username}\r\n                />\r\n\r\n                <input\r\n                    style={{ width: 200, marginTop: 10 }}\r\n                    placeholder=\"Password\"\r\n                    id=\"password\"\r\n                    onChange={this.handleChangePassword}\r\n                    value={password}\r\n                />\r\n\r\n                <div\r\n                    style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        width: 100,\r\n                        padding: 10, marginTop: 20,\r\n                        backgroundColor: '#42ABE1'\r\n                    }}\r\n                    onClick={this.onLogin}>\r\n                    <p> Đăng nhập </p>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default function BaseLoginScreen() {\r\n    let match = useRouteMatch();\r\n    const history = useHistory();\r\n    return (\r\n        <LoginScreen match={match} history={history} />\r\n    )\r\n};","F:\\server\\my-app\\src\\screens\\RegisterScreen.js",["67","68","69","70","71","72","73"],"import Axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport { useRouteMatch, useParams, useHistory } from \"react-router-dom\";\r\nimport Constant from '../constant';\r\n\r\nclass RegisterScreen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            name: '',\r\n            phone: '',\r\n            address: '',\r\n        };\r\n    }\r\n\r\n    handleChangeUsername = (e) => {\r\n        this.setState({ username: e.target.value });\r\n    }\r\n\r\n    handleChangePassword = (e) => {\r\n        this.setState({ password: e.target.value });\r\n    }\r\n\r\n    handleChangeName = (e) => {\r\n        this.setState({ name: e.target.value });\r\n    }\r\n\r\n    handleChangePhone = (e) => {\r\n        this.setState({ phone: e.target.value });\r\n    }\r\n\r\n    handleChangeAddress = (e) => {\r\n        this.setState({ address: e.target.value });\r\n    }\r\n\r\n    validate = () => {\r\n        const { username, password, name, phone, address } = this.state;\r\n\r\n        if (username == '') {\r\n            alert('username không đc bỏ trống');\r\n            return false;\r\n        }\r\n\r\n        if (password == '') {\r\n            alert('password không đc bỏ trống');\r\n            return false;\r\n        }\r\n\r\n        if (name == '') {\r\n            alert('name không đc bỏ trống');\r\n            return false;\r\n        }\r\n\r\n        if (phone == '') {\r\n            alert('phone không đc bỏ trống');\r\n            return false;\r\n        }\r\n\r\n        if (address == '') {\r\n            alert('address không đc bỏ trống');\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    onRegister = async () => {\r\n        const { username, password, name, phone, address } = this.state;\r\n        if (this.validate()) {\r\n            try {\r\n                const params = {\r\n                    username: username,\r\n                    password: password,\r\n                    name: name,\r\n                    phone: phone,\r\n                    address: address\r\n                }\r\n                const res = await Axios.post(`${Constant.BASE_URL}/api/register`, params);\r\n                console.log(\"Dangki:\", res);\r\n                if (res.data.status != 200) {\r\n                    setTimeout(() => { alert(res.data.message) }, 250);\r\n                    return;\r\n                }\r\n                alert(res.data.message);\r\n                await localStorage.clear();\r\n                this.props.history.push('/');\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { username, password, name, phone, address } = this.state;\r\n        return (\r\n            <div style={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n            }}>\r\n                <h1>Đăng ký tài khoản</h1>\r\n                <input\r\n                    style={{ width: 200, marginTop: 10 }}\r\n                    placeholder=\"Username\"\r\n                    id=\"username\"\r\n                    onChange={this.handleChangeUsername}\r\n                    value={username}\r\n                />\r\n\r\n                <input\r\n                    style={{ width: 200, marginTop: 10 }}\r\n                    placeholder=\"Password\"\r\n                    id=\"password\"\r\n                    onChange={this.handleChangePassword}\r\n                    value={password}\r\n                />\r\n\r\n                <input\r\n                    style={{ width: 200, marginTop: 10 }}\r\n                    placeholder=\"Name\"\r\n                    id=\"name\"\r\n                    onChange={this.handleChangeName}\r\n                    value={name}\r\n                />\r\n\r\n                <input\r\n                    style={{ width: 200, marginTop: 10 }}\r\n                    placeholder=\"Phone\"\r\n                    id=\"phone\"\r\n                    onChange={this.handleChangePhone}\r\n                    value={phone}\r\n                />\r\n\r\n                <input\r\n                    style={{ width: 200, marginTop: 10 }}\r\n                    placeholder=\"Address\"\r\n                    id=\"address\"\r\n                    onChange={this.handleChangeAddress}\r\n                    value={address}\r\n                />\r\n\r\n                <div\r\n                    style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        width: 100,\r\n                        padding: 10, marginTop: 20,\r\n                        backgroundColor: '#42ABE1'\r\n                    }}\r\n                    onClick={this.onRegister}>\r\n                    <p> Đăng ký </p>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default function BaseRegisterScreen() {\r\n    let match = useRouteMatch();\r\n    const history = useHistory();\r\n    return <RegisterScreen match={match.url} history={history} />\r\n} ","F:\\server\\my-app\\src\\constant\\index.js",[],"F:\\server\\my-app\\src\\screens\\OrderScreen.js",["74","75"],"import Axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport Constant from '../../src/constant';\r\n\r\nclass OrderScreen extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getOrders();\r\n    }\r\n\r\n    getOrders = async () => {\r\n        try {\r\n            const user = await localStorage.getItem('user');\r\n            const userPar = JSON.parse(user);\r\n            const res = await Axios.get(`${Constant.BASE_URL}/order/show`, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${userPar && userPar.access_token}`\r\n                }\r\n            });\r\n            console.log('getOrders:', res);\r\n            if (res.data.status != 200) {\r\n                alert(res.data.message);\r\n                return;\r\n            }\r\n            this.setState({\r\n                data: res.data.data\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    renderListOrder = () => {\r\n        const { data } = this.state;\r\n        if (data.length == 0) {\r\n            return <div>\r\n                <p style={{ color: 'grey' }}>Đơn hàng trống</p>\r\n            </div>\r\n        }\r\n        return (\r\n            <ul>\r\n                {\r\n                    data.map((e, i) => {\r\n                        return (\r\n                            <li\r\n                                key={e.id}\r\n                                style={{\r\n                                    display: 'flex',\r\n                                    flexDirection: 'column',\r\n                                    marginTop: 15,\r\n                                    backgroundColor: 'yellow',\r\n                                    width: 500\r\n                                }}>\r\n                                <p>Mã đơn hàng: {e.id}</p>\r\n                                <p>Ngày tạo: {e.date}</p>\r\n                                <p style={{ color: '#BF081F' }}>Tổng tiền: {e.amount} VNĐ</p>\r\n                                {\r\n                                    <ul>\r\n                                        {e.items.map((ele, index) => {\r\n                                            return <li\r\n                                                style={{ display: 'flex', flexDirection: 'column', backgroundColor: '#46A049', marginTop: 8 }}\r\n                                                key={ele.id}>\r\n                                                <p>Tên sản phẩm: {ele.name}</p>\r\n                                                <p>Số lượng: {ele.quantity}</p>\r\n                                            </li>\r\n                                        })}\r\n                                    </ul>\r\n\r\n                                }\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Đơn hàng</h1>\r\n                {this.renderListOrder()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default function BaseOrderScreen() {\r\n    let match = useRouteMatch();\r\n    const history = useHistory();\r\n    return (<OrderScreen match={match} history={history} />)\r\n} ","F:\\server\\my-app\\src\\screens\\AccountScreen.js",["76","77","78","79"],"import Axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport Constant from '../constant';\r\nimport { Link, useRouteMatch, useHistory } from \"react-router-dom\";\r\nclass AccountScreen extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            phone: '',\r\n            address: '',\r\n            avatarShow: '',\r\n            avatar: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.showUser()\r\n    }\r\n\r\n    showUser = async () => {\r\n        try {\r\n            const user = await localStorage.getItem('user');\r\n            const userPar = JSON.parse(user);\r\n            const res = await Axios.get(`${Constant.BASE_URL}/user/show`, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${userPar && userPar.access_token}`\r\n                }\r\n            });\r\n            console.log(res);\r\n            if (res.data.status != 200) {\r\n                return;\r\n            }\r\n            this.setState({\r\n                name: res.data.data.name,\r\n                phone: res.data.data.phone,\r\n                address: res.data.data.address,\r\n                avatarShow: res.data.data.avatar\r\n            })\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    handleChangeName = (e) => {\r\n        this.setState({ name: e.target.value });\r\n    }\r\n\r\n    handleChangePhone = (e) => {\r\n        this.setState({ phone: e.target.value });\r\n    }\r\n\r\n    handleChangeAdress = (e) => {\r\n        this.setState({ address: e.target.value });\r\n    }\r\n\r\n\r\n    onFileChange = (e) => {\r\n        console.log(e);\r\n\r\n        this.setState({\r\n            avatar: e.target.files[0]\r\n        })\r\n    }\r\n\r\n    onSave = async () => {\r\n        if (this.state.avatar == null) {\r\n            alert('Bạn chưa chọn ảnh');\r\n            return;\r\n        }\r\n        try {\r\n            const user = await localStorage.getItem('user');\r\n            const userPar = JSON.parse(user);\r\n\r\n            let formData = new FormData();\r\n            formData.append(\"name\", this.state.name);\r\n            formData.append(\"phone\", this.state.phone);\r\n            formData.append(\"address\", this.state.address)\r\n            formData.append('avatar', this.state.avatar);\r\n\r\n            const res = await Axios.post(`${Constant.BASE_URL}/user/upload`,\r\n                formData,\r\n                {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${userPar && userPar.access_token}`,\r\n                        \"Content-type\": \"multipart/form-data\",\r\n                    },\r\n                }\r\n            )\r\n\r\n            console.log(res);\r\n\r\n            if(res.data.status !=200) {\r\n                alert(res.data.message);\r\n                return;\r\n            }\r\n            this.showUser();\r\n        } catch (error) {\r\n            console.log(\"loi:\", error);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { name, phone, address, avatarShow } = this.state;\r\n        return (\r\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                <h1>Tài khoản</h1>\r\n\r\n                <p>Name:</p>\r\n                <input\r\n                    style={{ width: 200, marginTop: 10 }}\r\n                    placeholder=\"name\"\r\n                    id=\"name\"\r\n                    onChange={this.handleChangeName}\r\n                    value={name}\r\n                />\r\n\r\n                <p>Phone:</p>\r\n                <input\r\n                    disabled\r\n                    style={{ width: 200, marginTop: 10 }}\r\n                    placeholder=\"phone\"\r\n                    id=\"phone\"\r\n                    onChange={this.handleChangePhone}\r\n                    value={phone}\r\n                />\r\n\r\n                <p>Address:</p>\r\n                <input\r\n                    style={{ width: 200, marginTop: 10 }}\r\n                    placeholder=\"address\"\r\n                    id=\"address\"\r\n                    onChange={this.handleChangeAdress}\r\n                    value={address}\r\n                />\r\n\r\n                <p>Avtart:</p>\r\n                {\r\n                    avatarShow && <img src={`${Constant.BASE_URL}${avatarShow}`} style={{ width: 50, height: 50 }} />\r\n                }\r\n                <input\r\n                    type=\"file\"\r\n                    style={{ width: 200, marginTop: 10 }}\r\n                    onChange={this.onFileChange} />\r\n\r\n                <div\r\n                    onClick={this.onSave}\r\n                    style={{ backgroundColor: 'green', width: 70, padding: 4, marginTop: 10 }}>\r\n                    <p style={{ margin: 10, color: 'white' }}>Lưu</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default function BaseAccountScreen() {\r\n    let match = useRouteMatch();\r\n    const history = useHistory();\r\n    return <AccountScreen match={match.url} history={history} />\r\n};","F:\\server\\my-app\\src\\screens\\TestScreen.js",["80","81","82"],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":92,"column":18,"nodeType":"89","messageId":"90","endLine":92,"endColumn":20},{"ruleId":"91","severity":1,"message":"92","line":115,"column":36,"nodeType":"93","endLine":115,"endColumn":57},{"ruleId":"87","severity":1,"message":"94","line":136,"column":33,"nodeType":"89","messageId":"90","endLine":136,"endColumn":35},{"ruleId":"83","replacedBy":"95"},{"ruleId":"85","replacedBy":"96"},{"ruleId":null,"fatal":true,"severity":2,"message":"97","line":208,"column":32},{"ruleId":"83","replacedBy":"98"},{"ruleId":"85","replacedBy":"99"},{"ruleId":"87","severity":1,"message":"88","line":26,"column":22,"nodeType":"89","messageId":"90","endLine":26,"endColumn":24},{"ruleId":"87","severity":1,"message":"88","line":31,"column":22,"nodeType":"89","messageId":"90","endLine":31,"endColumn":24},{"ruleId":"87","severity":1,"message":"88","line":48,"column":37,"nodeType":"89","messageId":"90","endLine":48,"endColumn":39},{"ruleId":"100","severity":1,"message":"101","line":3,"column":25,"nodeType":"102","messageId":"103","endLine":3,"endColumn":34},{"ruleId":"87","severity":1,"message":"88","line":41,"column":22,"nodeType":"89","messageId":"90","endLine":41,"endColumn":24},{"ruleId":"87","severity":1,"message":"88","line":46,"column":22,"nodeType":"89","messageId":"90","endLine":46,"endColumn":24},{"ruleId":"87","severity":1,"message":"88","line":51,"column":18,"nodeType":"89","messageId":"90","endLine":51,"endColumn":20},{"ruleId":"87","severity":1,"message":"88","line":56,"column":19,"nodeType":"89","messageId":"90","endLine":56,"endColumn":21},{"ruleId":"87","severity":1,"message":"88","line":61,"column":21,"nodeType":"89","messageId":"90","endLine":61,"endColumn":23},{"ruleId":"87","severity":1,"message":"94","line":82,"column":37,"nodeType":"89","messageId":"90","endLine":82,"endColumn":39},{"ruleId":"87","severity":1,"message":"94","line":29,"column":33,"nodeType":"89","messageId":"90","endLine":29,"endColumn":35},{"ruleId":"87","severity":1,"message":"88","line":43,"column":25,"nodeType":"89","messageId":"90","endLine":43,"endColumn":27},{"ruleId":"100","severity":1,"message":"104","line":4,"column":10,"nodeType":"102","messageId":"103","endLine":4,"endColumn":14},{"ruleId":"87","severity":1,"message":"94","line":32,"column":33,"nodeType":"89","messageId":"90","endLine":32,"endColumn":35},{"ruleId":"87","severity":1,"message":"94","line":95,"column":32,"nodeType":"89","messageId":"90","endLine":95,"endColumn":34},{"ruleId":"105","severity":1,"message":"106","line":141,"column":35,"nodeType":"107","endLine":141,"endColumn":118},{"ruleId":"108","severity":1,"message":"109","line":22,"column":33,"nodeType":"107","endLine":22,"endColumn":45},{"ruleId":"108","severity":1,"message":"109","line":23,"column":33,"nodeType":"107","endLine":23,"endColumn":45},{"ruleId":"108","severity":1,"message":"109","line":24,"column":33,"nodeType":"107","endLine":24,"endColumn":45},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","Expected '!==' and instead saw '!='.",["110"],["111"],"Parsing error: Expected corresponding JSX closing tag for <p>\n\n  206 |                         backgroundColor: 'orange', width: 100, padding: 10\n  207 |                     }}>\n> 208 |                     <p>Mua hàng</span>\n      |                                ^\n  209 |                 </div>\n  210 |                 { this.renderListProduct()}\n  211 |             </div>",["110"],["111"],"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]