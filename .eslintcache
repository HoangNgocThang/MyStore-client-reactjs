[{"F:\\server\\my-app\\src\\reportWebVitals.js":"1","F:\\server\\my-app\\src\\screens\\HomeScreen.js":"2","F:\\server\\my-app\\src\\screens\\AccountScreen.js":"3"},{"size":362,"mtime":1608085646143,"results":"4","hashOfConfig":"5"},{"size":11597,"mtime":1609729453399,"results":"6","hashOfConfig":"5"},{"size":5474,"mtime":1609732353005,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"118jfvj",{"filePath":"10","messages":"11","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"12","messages":"13","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"F:\\server\\my-app\\src\\reportWebVitals.js",[],"F:\\server\\my-app\\src\\screens\\HomeScreen.js",["15","16","17"],"F:\\server\\my-app\\src\\screens\\AccountScreen.js",["18","19","20","21","22","23"],"import Axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport Constant from '../constant';\r\nimport { Link, useRouteMatch, useHistory } from \"react-router-dom\";\r\n\r\nclass AccountScreen extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            phone: '',\r\n            address: '',\r\n            avatarShow: '',\r\n            avatar: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.showUser()\r\n    }\r\n\r\n    showUser = async () => {\r\n        try {\r\n            const user = await localStorage.getItem('user');\r\n            const userPar = JSON.parse(user);\r\n            const res = await Axios.get(`${Constant.BASE_URL}/user/show`, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${userPar && userPar.access_token}`\r\n                }\r\n            });\r\n            console.log(res);\r\n            if (res.data.status != 200) {\r\n                return;\r\n            }\r\n            this.setState({\r\n                name: res.data.data.name,\r\n                phone: res.data.data.phone,\r\n                address: res.data.data.address,\r\n                avatarShow: res.data.data.avatar\r\n            })\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    handleChangeName = (e) => {\r\n        this.setState({ name: e.target.value });\r\n    }\r\n\r\n    handleChangePhone = (e) => {\r\n        this.setState({ phone: e.target.value });\r\n    }\r\n\r\n    handleChangeAdress = (e) => {\r\n        this.setState({ address: e.target.value });\r\n    }\r\n\r\n\r\n    onFileChange = (e) => {\r\n        console.log(e);\r\n\r\n        this.setState({\r\n            avatar: e.target.files[0]\r\n        })\r\n    }\r\n\r\n    validate = () => {\r\n        if (this.state.name == '' || this.state.name == null) {\r\n            return false;\r\n        }\r\n\r\n        if (this.state.address == '' || this.state.address == null) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    onSave = async () => {\r\n        console.log(this.state.avatar);\r\n        if (this.validate) {\r\n            try {\r\n                const user = await localStorage.getItem('user');\r\n                const userPar = JSON.parse(user);\r\n\r\n                let formData = new FormData();\r\n                formData.append(\"name\", this.state.name);\r\n                formData.append(\"phone\", this.state.phone);\r\n                formData.append(\"address\", this.state.address)\r\n                formData.append('avatar', this.state.avatar);\r\n                formData.append('avatarShow', this.state.avatarShow);\r\n\r\n                const res = await Axios.post(`${Constant.BASE_URL}/user/upload`,\r\n                    formData,\r\n                    {\r\n                        headers: {\r\n                            'Authorization': `Bearer ${userPar && userPar.access_token}`,\r\n                            \"Content-type\": \"multipart/form-data\",\r\n                        },\r\n                    }\r\n                )\r\n\r\n                console.log(res);\r\n\r\n                if (res.data.status != 200) {\r\n                    alert(res.data.message);\r\n                    return;\r\n                }\r\n                this.showUser();\r\n            } catch (error) {\r\n                console.log(\"loi:\", error);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { name, phone, address, avatarShow } = this.state;\r\n        return (\r\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                <h1>Tài khoản</h1>\r\n\r\n                <p>Name:</p>\r\n                <input\r\n                    style={{ width: 200, marginTop: 10 }}\r\n                    placeholder=\"name\"\r\n                    id=\"name\"\r\n                    onChange={this.handleChangeName}\r\n                    value={name}\r\n                />\r\n\r\n                <p>Phone:</p>\r\n                <input\r\n                    disabled\r\n                    style={{ width: 200, marginTop: 10 }}\r\n                    placeholder=\"phone\"\r\n                    id=\"phone\"\r\n                    onChange={this.handleChangePhone}\r\n                    value={phone}\r\n                />\r\n\r\n                <p>Address:</p>\r\n                <input\r\n                    style={{ width: 200, marginTop: 10 }}\r\n                    placeholder=\"address\"\r\n                    id=\"address\"\r\n                    onChange={this.handleChangeAdress}\r\n                    value={address}\r\n                />\r\n\r\n                <p>Avtart:</p>\r\n                {\r\n                    avatarShow && <img src={`${Constant.BASE_URL}${avatarShow}`}\r\n                        style={{\r\n                            objectFit: 'cover',\r\n                            width: 250, height: 250, marginTop: 10\r\n                        }} />\r\n                }\r\n                <input\r\n                    type=\"file\"\r\n                    style={{ width: 200, marginTop: 10 }}\r\n                    onChange={this.onFileChange} />\r\n\r\n                <div\r\n                    onClick={this.onSave}\r\n                    style={{ backgroundColor: 'green', width: 70, padding: 4, marginTop: 10 }}>\r\n                    <p style={{ margin: 10, color: 'white' }}>Lưu</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default function BaseAccountScreen() {\r\n    let match = useRouteMatch();\r\n    const history = useHistory();\r\n    return <AccountScreen match={match.url} history={history} />\r\n};",{"ruleId":"24","severity":1,"message":"25","line":92,"column":18,"nodeType":"26","messageId":"27","endLine":92,"endColumn":20},{"ruleId":"28","severity":1,"message":"29","line":115,"column":36,"nodeType":"30","endLine":115,"endColumn":57},{"ruleId":"24","severity":1,"message":"31","line":136,"column":33,"nodeType":"26","messageId":"27","endLine":136,"endColumn":35},{"ruleId":"32","severity":1,"message":"33","line":4,"column":10,"nodeType":"34","messageId":"35","endLine":4,"endColumn":14},{"ruleId":"24","severity":1,"message":"31","line":33,"column":33,"nodeType":"26","messageId":"27","endLine":33,"endColumn":35},{"ruleId":"24","severity":1,"message":"25","line":70,"column":29,"nodeType":"26","messageId":"27","endLine":70,"endColumn":31},{"ruleId":"24","severity":1,"message":"25","line":74,"column":32,"nodeType":"26","messageId":"27","endLine":74,"endColumn":34},{"ruleId":"24","severity":1,"message":"31","line":107,"column":37,"nodeType":"26","messageId":"27","endLine":107,"endColumn":39},{"ruleId":"36","severity":1,"message":"37","line":154,"column":35,"nodeType":"38","endLine":158,"endColumn":30},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","Expected '!==' and instead saw '!='.","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]